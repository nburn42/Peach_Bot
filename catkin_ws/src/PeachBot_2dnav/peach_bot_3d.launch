<launch>

  <master auto="start"/>
  <arg name="map_file" default="$(find peach_bot_2dnav)/blank_map.yaml" />
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />
  
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <rosparam file="$(find peach_bot_2dnav)/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find peach_bot_2dnav)/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find peach_bot_2dnav)/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find peach_bot_2dnav)/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find peach_bot_2dnav)/base_local_planner_params.yaml" command="load" />
    <!-- remap from="odom" to="odom" / -->

  </node>



  <node pkg="tf" type="static_transform_publisher" name="Zed_to_odom_broadcaster" args="0 0 0 0 0 0 odom zed_initial_frame 100" />

  <node pkg="tf" type="static_transform_publisher" name="Zed_to_camera_broadcaster" args=".3 0 .25 0 0 0 base_link camera_depth_frame 100" />
 

  <group ns="rtabmap">
    <!-- Visual SLAM -->
    <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" args="--delete_db_on_start">
      <param name="subscribe_depth" type="bool" value="true"/>
      <param name="subscribe_laserScan" type="bool" value="false"/>

      <remap from="rgb/image"       to="/camera/left/image_rect"/>
      <remap from="rgb/camera_info" to="/camera/left/camera_info"/>
      <remap from="depth/image"     to="/camera/depth"/>

      <!--
      <remap from="odom" to="/stereo_odometer/odometry"/>
      -->

      <param name="frame_id" type="string" value="/camera_depth_frame"/>
      <param name="queue_size" type="int" value="30"/>

      <param name="Rtabmap/TimeThr" type="string" value="700"/>
      <param name="SURF/HessianThreshold" type="string" value="600"/>
      <param name="LccBow/MaxDepth" type="string" value="12"/>
      <param name="LccBow/MinInliers" type="string" value="10"/>
      <param name="LccBow/InlierDistance" type="string" value="0.05"/>
    </node>


  </group>

  <!-- todo fuse sesors 
	<node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization"> 
	    <rosparam command="load" file="$(find peach_bot_2dnav)/robot_localization.yaml" />
	</node>
  -->

  <include file="$(find zed_wrapper)/launch/zed_tf.launch" />

  <arg name="svo_file" default=""/>
  
  <group ns="camera">
    <node name="zed_wrapper_node" pkg="zed_wrapper" type="zed_wrapper_node" args="$(arg svo_file)" output="screen">

      <param name="resolution"            value="2" />
      <param name="quality"               value="1" />
      <param name="sensing_mode"          value="1" />
      <param name="frame_rate"            value="60" />
      <param name="odometry_DB"           value="" />
      <param name="openni_depth_mode"     value="0" />

      <param name="rgb_topic"             value="rgb/image_rect_color" />
      <param name="rgb_cam_info_topic"    value="rgb/camera_info" />
      <param name="rgb_frame_id"          value="/camera_depth_frame" />

      <param name="left_topic"            value="left/image_rect_color" />
      <param name="left_cam_info_topic"   value="left/camera_info" />
      <param name="left_frame_id"         value="/camera_depth_frame" />

      <param name="right_topic"           value="right/image_rect_color" />
      <param name="right_cam_info_topic"  value="right/camera_info" />
      <param name="right_frame_id"        value="/camera_depth_frame" />

      <param name="depth_topic"           value="depth/image_raw" />
      <param name="depth_cam_info_topic"  value="depth/camera_info" />
      <param name="depth_frame_id"        value="/camera_depth_frame" />

      <param name="point_cloud_topic"     value="point_cloud/cloud" />
      <param name="cloud_frame_id"        value="/camera_depth_frame" />

     <!-- use with robot_localization
      <param name="odometry_topic"                value="/zed/odom" />
      <param name="odometry_frame_id"             value="/odom" />
      <param name="odometry_transform_frame_id"   value="/zed_base_link_guess" />
     -->
      <param name="odometry_topic"                value="/odom" />
      <param name="odometry_frame_id"             value="/odom" />
      <param name="odometry_transform_frame_id"   value="/base_link" />

    </node>
  </group>

  <node pkg="rosserial_python" type="serial_node.py" name="serial_node">
    <param name="port" value="/dev/ttyACM0"/>
    <param name="baud" value="57600"/>
  </node>

</launch>
